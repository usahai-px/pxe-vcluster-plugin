multiNamespaceMode:
  enabled: true

fallbackHostDns: true

sync:
  services:
    all: true
    enabled: true
  configmaps:
    enabled: true
  secrets:
    enabled: true
  endpoints:
    enabled: true
  pods:
    enabled: true
    ephemeralContainers: true
    status: true
  events:
    enabled: true
  ingresses:
    enabled: true
  nodes:
    enabled: true
    enableScheduler: true
    # If nodes sync is enabled, and syncAllNodes = true, the virtual cluster
    # will sync all nodes instead of only the ones where some pods are running.
    syncAllNodes: true
    # nodeSelector is used to limit which nodes get synced to the vcluster,
    # and which nodes are used to run vcluster pods.
    # A valid string representation of a label selector must be used.
    nodeSelector: ""
    # syncNodeChanges allows vcluster user edits of the nodes to be synced down to the host nodes.
    # Write permissions on node resource will be given to the vcluster.
    syncNodeChanges: true
  persistentvolumes:
    enabled: true
  persistentvolumeclaims:
    enabled: true
  csidrivers:
    enabled: true
  csinodes:
    enabled: true
  csistoragecapacities:
    enabled: true
  storageclasses:
    enabled: true
  hoststorageclasses:
    enabled: false
  priorityclasses:
    enabled: true
  networkpolicies:
    enabled: true
  volumesnapshots:
    enabled: true
  poddisruptionbudgets:
    enabled: true
  serviceaccounts:
    enabled: true

# Plugin Definition below. This is essentially a valid helm values file that will be merged
# with the other vcluster values during vcluster create or helm install.
plugin:
  crd-sync:
    image: docker.io/usahai728/px-sync-plugin@sha256:947ad9d8b8aa79350c48030ea4988f6a8d988cf5c871d75f1c2d999cd8829e00
    imagePullPolicy: IfNotPresent
    rbac:
      role:
        extraRules:
          - apiGroups: ["volumesnapshot.external-storage.k8s.io"]
            resources: ["volumesnapshots", "volumesnapshotdatas"]
            verbs: ["create", "delete", "patch", "update", "get", "list", "watch"]
      clusterRole:
        extraRules:
          - apiGroups: ["apiextensions.k8s.io"]
            resources: ["customresourcedefinitions"]
            verbs: ["get", "list", "watch"]

# Make sure the cluster role is enabled or otherwise the plugin won't be able to watch custom
# resource definitions.
rbac:
  clusterRole:
    create: true

# # Scale up etcd
# etcd:
#   replicas: 2
#   fsGroup: 12345
#   securityContext:
#     allowPrivilegeEscalation: false
#     capabilities:
#       drop:
#       - ALL
#     readOnlyRootFilesystem: true
#     runAsGroup: 12345
#     runAsNonRoot: true
#     runAsUser: 12345
#     seccompProfile:
#       type: RuntimeDefault


# # Scale up controller manager
# controller:
#   replicas: 2
#   securityContext:
#     allowPrivilegeEscalation: false
#     capabilities:
#       drop:
#       - ALL
#     readOnlyRootFilesystem: true
#     runAsGroup: 12345
#     runAsNonRoot: true
#     runAsUser: 12345
#     seccompProfile:
#       type: RuntimeDefault

# # Scale up api server
# api:
#   replicas: 2
#   securityContext:
#     allowPrivilegeEscalation: false
#     capabilities:
#       drop:
#       - ALL
#     readOnlyRootFilesystem: true
#     runAsGroup: 12345
#     runAsNonRoot: true
#     runAsUser: 12345
#     seccompProfile:
#       type: RuntimeDefault

# # Scale up DNS server
# coredns:
#   replicas: 2
#   securityContext:
#     allowPrivilegeEscalation: false
#     capabilities:
#       drop:
#       - ALL
#     readOnlyRootFilesystem: true
#     runAsGroup: 12345
#     runAsNonRoot: true
#     runAsUser: 12345
#     seccompProfile:
#       type: RuntimeDefault

mapServices:
  fromHost:
  - from: kube-system/portworx-api
    to: kube-system/portworx-api
  - from: kube-system/portworx-kvdb-service
    to: kube-system/portworx-kvdb-service
  - from: kube-system/portworx-operator-metrics
    to: kube-system/portworx-operator-metrics
  - from: kube-system/portworx-service
    to: kube-system/portworx-service
  - from: kube-system/portworx-operated
    to: kube-system/portworx-operated
  - from: kube-system/px-csi-service
    to: kube-system/px-csi-service
  - from: kube-system/px-prometheus
    to: kube-system/px-prometheus
  - from: kube-system/stork-service
    to: kube-system/stork-service


